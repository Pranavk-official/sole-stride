<!-- Hero Section-->
<section class="hero">
  <div class="container">
    <!-- Breadcrumbs -->
    <ol class="breadcrumb justify-content-center">
      <li class="breadcrumb-item"><a href="index.html">Home</a></li>
      <li class="breadcrumb-item"><a href="#">Cart</a></li>
      <li class="breadcrumb-item active">Checkout</li>
    </ol>
    <!-- Hero Content-->
    <div class="hero-content pb-5 text-center">
      <h1 class="hero-heading">Checkout</h1>
    </div>
</section>

<!-- Checkout Section-->
<section>
  <div class="container mb-7">
    <div class="row g-5">
      <div class="col-md-5 col-lg-4 order-md-last">
        <h4 class="d-flex justify-content-between align-items-center mb-3">
          <span class="text-primary">Your cart</span>
          <span class="badge bg-primary rounded-pill"><%- cartCount %></span>
        </h4>
        <ul class="list-group mb-3">
          <% cartList.forEach(item => { %>
          <li class="list-group-item d-flex justify-content-between lh-sm">
            <div>
              <h6 class="my-0"><%- item.prod_details.product_name %></h6>
              <small class="text-body-secondary">Size: <%- item.prod_details.size %></small> <br>
              <small class="text-body-secondary">Color: <%- item.prod_details.color %></small>
            </div>
            <span class="text-body-secondary">$<%- item.price %></span>
          </li>
          <% }) %>
          <!-- <li class="list-group-item d-flex justify-content-between bg-body-tertiary">
            <div class="text-success">
              <h6 class="my-0">Promo code</h6>
              <small>EXAMPLECODE</small>
            </div>
            <span class="text-success">âˆ’$5</span>
          </li> -->
          <li class="list-group-item d-flex justify-content-between">
            <span>Total (INR)</span>
            <strong>$<%- totalPrice %></strong>
          </li>
        </ul>

        <!-- <form class="card p-2">
          <div class="input-group">
            <input type="text" class="form-control" placeholder="Promo code">
            <button type="submit" class="btn btn-secondary">Redeem</button>
          </div>
        </form> -->
      </div>
      <div class="col-md-7 col-lg-8">
        <h4 class="mb-3">Billing address</h4>
        <form class="needs-validation" id="orderForm">
          <div class="d-flex">

          </div>
          <div class="row g-3">
            <section class="col-lg-8">
              <!-- Toolbar-->
              <div class="d-none d-lg-flex justify-content-between align-items-center pt-lg-3 pb-3">
                <h6 class="fs-base  mb-0">Select Billing Address:</h6>
              </div>

              <!-- Addresses list-->
              <div class="table table-responsive table-striped mt-0">
                <table class="table table-hover mb-0">
                  <thead>
                    <tr>
                      <th>Address</th>
                      <!-- <th>Actions</th> -->
                    </tr>
                  </thead>
                  <tbody>
                    <% address.forEach((item,index) => { %>
                    <tr>
                      <td class="align-middle mx-4 py-3 d-flex align-items-center form-check">
                        <input required class="form-check-input" type="radio" id="address-<%= index %>" name="address" value="<%= item._id %>">
                        <label class="form-check-label mx-2 text-capitalize" for="address-<%= index %>">
                          <%- item.name.toLowerCase() + ', ' + item.house_name + ', ' + item.town + ', ' + item.state + ', PIN: ' + item.zipcode + ', PH:' + item.phone %>
                        </label>

                      </td>
                      <!-- <td class="py-3 align-middle"><a class="nav-link-style me-2" href="#" data-bs-toggle="tooltip" title="Edit"><i class="ci-edit"></i></a><a class="nav-link-style text-danger" href="#" data-bs-toggle="tooltip" title="Remove">
                          <div class="bi bi-trash"></div>
                        </a>
                      </td> -->
                    </tr>
                    <% }) %>

                  </tbody>
                </table>
              </div>
              <div class="text-sm-start pt-4">
                <a class="btn btn-outline-success" href="#add-address" data-bs-toggle="modal">
                  Add new address
                </a>
              </div>
            </section>
          </div>


          <hr class="my-4">

          <h4 class="mb-3">Payment</h4>

          <div class="my-3">
            <div class="form-check">
              <input id="credit" name="paymentMethod" type="radio" class="form-check-input" value="COD" checked required>
              <label class="form-check-label" for="credit">Cash On Delivery</label>
            </div>
            <div class="form-check">
              <input id="debit" name="paymentMethod" type="radio" class="form-check-input" value="Online" required>
              <label class="form-check-label" for="debit">RazorPay</label>
            </div>
            <div class="form-check">
              <input id="paypal" name="paymentMethod" type="radio" value="Wallet" class="form-check-input" required>
              <label class="form-check-label" for="paypal">Wallet</label>
            </div>
          </div>

          <hr class="my-4">

          <button id="submitOrder" class=" btn btn-primary btn-lg" type="submit">Place Order</button>
          <!-- <div class="row">
          </div> -->
        </form>
      </div>
    </div>
  </div>
</section>

<!-- Add New Address Modal-->
<form class="needs-validation modal fade" action="/checkout/add-address" method="POST" id="add-address" tabindex="-1" novalidate>
  <div class="modal-dialog modal-lg">
    <div class="modal-content p-4">
      <div class="modal-header">
        <h5 class="modal-title">Add a new address</h5>
        <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row gx-4 gy-3">
          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-fn">Full name</label>
            <input name="name" class="form-control" type="text" id="address-fn" required>
            <small></small>
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-ln">Phone</label>
            <input name="phone" class="form-control" type="text" id="address-ln" required>
            <small></small>
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-house-name">House Name</label>
            <input name="house_name" class="form-control" type="text" id="address-house-name">
            <small></small>
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-area">Area/Street</label>
            <input name="area_street" class="form-control" type="text" id="address-area">
            <small></small>
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-locality">locality</label>
            <input name="locality" class="form-control" type="text" id="address-locality">
            <small></small>
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-town">Town</label>
            <input name="town" class="form-control" type="text" id="address-town">
            <small></small>
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-state">State</label>
            <select class="form-select" name="state" id="address-state">
              <option value="india">Select State</option>
              <option value="Andhra Pradesh">Andhra Pradesh</option>
              <option value="Arunachal Pradesh">Arunachal Pradesh</option>
              <option value="Assam">Assam</option>
              <option value="Bihar">Bihar</option>
              <option value="Chhattisgarh">Chhattisgarh</option>
              <option value="Goa">Goa</option>
              <option value="Gujarat">Gujarat</option>
              <option value="Haryana">Haryana</option>
              <option value="Himachal Pradesh">Himachal Pradesh</option>
              <option value="Jharkhand">Jharkhand</option>
              <option value="Karnataka">Karnataka</option>
              <option value="Kerala">Kerala</option>
              <option value="Madhya Pradesh">Madhya Pradesh</option>
              <option value="Maharashtra">Maharashtra</option>
              <option value="Manipur">Manipur</option>
              <option value="Meghalaya">Meghalaya</option>
              <option value="Mizoram">Mizoram</option>
              <option value="Nagaland">Nagaland</option>
              <option value="Odisha">Odisha</option>
              <option value="Punjab">Punjab</option>
              <option value="Rajasthan">Rajasthan</option>
              <option value="Sikkim">Sikkim</option>
              <option value="Tamil Nadu">Tamil Nadu</option>
              <option value="Telangana">Telangana</option>
              <option value="Tripura">Tripura</option>
              <option value="Uttar Pradesh">Uttar Pradesh</option>
              <option value="Uttarakhand">Uttarakhand</option>
              <option value="West Bengal">West Bengal</option>
              <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
              <option value="Chandigarh">Chandigarh</option>
              <option value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and
                Daman
                and
                Diu
              </option>
              <option value="Lakshadweep">Lakshadweep</option>
              <option value="Delhi">Delhi</option>
              <option value="Puducherry">Puducherry</option>
            </select>
            <small></small>
          </div>

          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-zip">ZIP code</label>
            <input name="zipcode" class="form-control" type="number" id="address-zip" required>
            <div class="invalid-feedback">Please add your ZIP code!</div>
            <small></small>
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="address-landmark">Landmark</label>
            <input name="landmark" class="form-control" type="text" id="address-landmark" required>
            <small></small>
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="alternate-phone">Alternate Phone</label>
            <input name="alternate_phone" class="form-control" type="text" id="alternate-phone" required>
            <small></small>
            <input name="customer_id" type="hidden" value="<%- user._id %>" class="form-control">
          </div>
          <div class="col-sm-6 form-group">
            <label class="form-label" for="form-check">Address Type</label>
            <div class="form-check">
              <input class="form-check-input" type="radio" value="HOME" name="address_type" id="flexRadioDefault1" checked>
              <small></small>
              <label class="form-check-label" for="flexRadioDefault1">
                HOME
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" value="WORK" type="radio" name="address_type" id="flexRadioDefault2">
              <label class="form-check-label" for="flexRadioDefault2">
                WORK
              </label>
            </div>
          </div>
          <div class="col-12">
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="address-primary">
              <label class="form-check-label" for="address-primary">Make this address
                primary</label>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
        <button class="btn btn-outline-success btn-shadow" type="submit">Add address</button>
      </div>
    </div>
  </div>
</form>


<script defer>
  const form = document.querySelector("#add-address");

  const checkName = () => {
    const nameEl = document.querySelector("#address-fn");
    let valid = false;
    const name = nameEl.value.trim();

    if (!isRequired(name)) {
      showError(nameEl, "Full name cannot be blank.");
    } else {
      showSuccess(nameEl);
      valid = true;
    }
    return valid;
  };

  const checkPhone = () => {
    const phoneEl = document.querySelector("#address-ln");
    let valid = false;
    const phone = phoneEl.value.trim();

    if (!isRequired(phone)) {
      showError(phoneEl, "Phone number cannot be blank.");
    } else if (!isIndianPhoneNumber(phone)) {
      showError(phoneEl, "Phone number is not valid.");
    } else {
      showSuccess(phoneEl);
      valid = true;
    }
    return valid;
  };

  const checkHouseName = () => {
    const houseNameEl = document.querySelector("#address-house-name");
    let valid = false;
    const houseName = houseNameEl.value.trim();

    if (!isRequired(houseName)) {
      showError(houseNameEl, "House name cannot be blank.");
    } else {
      showSuccess(houseNameEl);
      valid = true;
    }
    return valid;
  };

  const checkAreaStreet = () => {
    const areaStreetEl = document.querySelector("#address-area");
    let valid = false;
    const areaStreet = areaStreetEl.value.trim();

    if (!isRequired(areaStreet)) {
      showError(areaStreetEl, "Area/Street cannot be blank.");
    } else {
      showSuccess(areaStreetEl);
      valid = true;
    }
    return valid;
  };

  const checkLocality = () => {
    const localityEl = document.querySelector("#address-locality");
    let valid = false;
    const locality = localityEl.value.trim();

    if (!isRequired(locality)) {
      showError(localityEl, "Locality cannot be blank.");
    } else {
      showSuccess(localityEl);
      valid = true;
    }
    return valid;
  };

  const checkTown = () => {
    const townEl = document.querySelector("#address-town");
    let valid = false;
    const town = townEl.value.trim();

    if (!isRequired(town)) {
      showError(townEl, "Town cannot be blank.");
    } else {
      showSuccess(townEl);
      valid = true;
    }
    return valid;
  };

  const checkState = () => {
    const stateEl = document.querySelector("#address-state");
    let valid = false;
    const state = stateEl.value;

    if (state === "india") {
      showError(stateEl, "Please select your state.");
    } else {
      showSuccess(stateEl);
      valid = true;
    }
    return valid;
  };

  const checkZipcode = () => {
    const zipcodeEl = document.querySelector("#address-zip");
    let valid = false;
    const zipcode = zipcodeEl.value;

    if (!isRequired(zipcode)) {
      showError(zipcodeEl, "ZIP code cannot be blank.");
    } else {
      showSuccess(zipcodeEl);
      valid = true;
    }
    return valid;
  };

  const checkLandmark = () => {
    const landmarkEl = document.querySelector("#address-landmark");
    let valid = false;
    const landmark = landmarkEl.value.trim();

    if (!isRequired(landmark)) {
      showError(landmarkEl, "Landmark cannot be blank.");
    } else {
      showSuccess(landmarkEl);
      valid = true;
    }
    return valid;
  };

  const checkAlternatePhone = () => {
    const alternatePhoneEl = document.querySelector("#alternate-phone");
    let valid = false;
    const alternatePhone = alternatePhoneEl.value.trim();

    if (!isRequired(alternatePhone)) {
      showError(alternatePhoneEl, "Alternate phone number cannot be blank.");
    } else if (!isIndianPhoneNumber(alternatePhone)) {
      showError(alternatePhoneEl, "Alternate phone number is not valid.");
    } else {
      showSuccess(alternatePhoneEl);
      valid = true;
    }
    return valid;
  };

  const checkAddressType = () => {
    const addressTypeEl = document.querySelector('input[name="address_type"]:checked');
    let valid = false;

    if (!addressTypeEl) {
      showError(addressTypeEl, "Please select an address type.");
    } else {
      showSuccess(addressTypeEl);
      valid = true;
    }
    return valid;
  };

  const isIndianPhoneNumber = (phone) => {
    const re = /^\d{10}$/;
    return re.test(phone);
  };

  const isRequired = (value) => (value === "" ? false : true);

  const showError = (input, message) => {
    const formField = input.parentElement;
    formField.classList.remove("success", "is-valid");
    input.classList.remove("success", "is-valid");
    formField.classList.add("error", "is-invalid");
    input.classList.add("error", "is-invalid");
    const error = formField.querySelector("small");
    error.textContent = message;
  };

  const showSuccess = (input) => {
    const formField = input.parentElement;
    formField.classList.remove("error", "is-invalid");
    input.classList.remove("error", "is-invalid");
    formField.classList.add("success", "is-valid");
    input.classList.add("success", "is-valid");
    const error = formField.querySelector("small");
    error.textContent = "";
  };

  form.addEventListener("submit", function(e) {
    e.preventDefault();

    let isNameValid = checkName(),
      isPhoneValid = checkPhone(),
      isHouseNameValid = checkHouseName(),
      isAreaStreetValid = checkAreaStreet(),
      isLocalityValid = checkLocality(),
      isTownValid = checkTown(),
      isStateValid = checkState(),
      isZipcodeValid = checkZipcode(),
      isLandmarkValid = checkLandmark(),
      isAlternatePhoneValid = checkAlternatePhone(),
      isAddressTypeValid = checkAddressType();

    let isFormValid =
      isNameValid &&
      isPhoneValid &&
      isHouseNameValid &&
      isAreaStreetValid &&
      isLocalityValid &&
      isTownValid &&
      isStateValid &&
      isZipcodeValid &&
      isLandmarkValid &&
      isAlternatePhoneValid &&
      isAddressTypeValid;

    if (isFormValid) {
      form.submit();
    }
  });

  document.addEventListener('DOMContentLoaded', function() {
    const submitOrder = document.getElementById("submitOrder");
    if (submitOrder) {
      submitOrder.addEventListener("click", function(e) {
        e.preventDefault();
        const addressRadioButtons = document.querySelectorAll('input[name="address"]');
        let isAddressSelected = false;
        for (let i = 0; i < addressRadioButtons.length; i++) {
          if (addressRadioButtons[i].checked) {
            isAddressSelected = true;
            break;
          }
        }

        if (!isAddressSelected) {
          Swal.fire({
            icon: 'warning',
            title: 'Oops...',
            text: 'Please add an address before placing the order!'
          });
          return;
        }

        // Existing code to handle form submission
        let form = document.getElementById("orderForm");
        if (form) {
          let formData = new FormData(form);
          const body = Object.fromEntries(formData);
          console.log(body);
          fetch("/user/place-order", {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify(body),
            })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                location.assign("/shop/order-success");
              }
            });
        } else {
          console.error("Form element not found");
        }
      });
    }
  });
</script>