<!-- Hero Section-->
<section class="hero">
  <div class="container">
    <!-- Breadcrumbs -->
    <ol class="breadcrumb justify-content-center">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
      <li class="breadcrumb-item active">Shop</li>
    </ol>
    <!-- Hero Content-->
    <div class="hero-content pb-5 text-center">
      <h1 class="hero-heading">Shop / Products</h1>
      <div class="row">
        <div class="col-xl-8 offset-xl-2">
          <p class="lead text-muted">
            Our products are always in high demand.
          </p>
        </div>
      </div>
    </div>
  </div>
</section>
<div class="container">
  <div class="row mb-5">
    <!-- Grid -->
    <div class="products-grid col-xl-9 col-lg-8 order-lg-2">
      <header class="product-grid-header">
        <div class="me-3 mb-3">
                Showing <strong> 1-12 </strong> of <strong><%- products?.length %> </strong>products
              </div>
        <!-- <div class="me-3 mb-3">
                <span class="me-2">Show</span>
                <a class="product-grid-header-show active" href="#">12 </a>
                <a class="product-grid-header-show " href="#">24 </a>
                <a class="product-grid-header-show " href="#">All </a>
              </div> -->
        <!-- <div class="mb-3 d-flex align-items-center">
          <span class="d-inline-block me-2">Sort by</span>
          <select class="form-select w-auto border-0">
            <option value="orderby_0">Default</option>
            <option value="orderby_1">Popularity</option>
            <option value="orderby_2">Rating</option>
            <option value="orderby_3">Newest first</option>
          </select>
        </div> -->
      </header>
      <div class="row">
        <!-- product-->
        <% if ( products !== 'undefined' && products?.length > 0) { %>
          <% products?.forEach(element => { %>
  
          <div class="col-xl-4 col-6">
            <div class="product">
              <div class="product-image">
                <% if (element.onOffer) { %>
                  <div class="ribbon ribbon-info">On offer <%- element.offerDiscountRate %>%</div>
                <% } %>
                <!-- <div class="ribbon ribbon-info">Fresh</div> -->
                <img class="img-fluid" src="/uploads/product-images/<%- element.primary_image.name %>" alt="product" />
                <div class="product-hover-overlay">
                  <a class="product-hover-overlay-link" href="/shop/product/<%- element._id %>"></a>
                  <div class="product-hover-overlay-buttons">
                    <!-- <button class="btn btn-outline-primary btn-product-left d-none d-sm-inline-block" <% if (element.variants && element.variants.length >0) { %> onclick="addToCart('<%- element?._id %>','<%- element.variants[0]._id %>','<%- element.variants[0].color %>', '<%- element.variants[0].size %>')" <% } %>>
                      <i class="bi bi-cart-fill fs-5"></i>
                    </button> -->
                    <a class="btn btn-dark btn-buy" href="/shop/product/<%- element._id %>">
                      <i class="bi bi-search"></i>
                      <span class="btn-buy-label ms-2">View</span>
                    </a>
                    <button id="wishlist-<%- element._id %>" class="btn btn-outline-danger btn-product-right d-none d-sm-inline-block justify-content-center" onclick="addToWishlist('<%- element._id %>')">
                      <i class="bi bi-heart fs-5"></i>
                    </button>
                  </div>
                </div>
              </div>
              <div class="py-2">
                <p class="text-muted text-sm mb-1"><%- element.brand_name %></p>
                <h3 class="h6 text-uppercase mb-1">
                  <a class="text-dark" href="#"><%- element.product_name %></a>
                </h3>
                <div class="row g-2">
                  <% if (!element.onOffer) { %>
                    <span class="text-muted col">₹<%- element.sellingPrice %></span>
                    <span class="text-muted col"><del>₹<%- element.actualPrice %></del></span>
                  <% } else { %>   
                      <span class="text-muted col">₹<%- element.offerDiscountPrice %></span>
                      <span class="text-muted col"><del>₹<%- element.sellingPrice %></del></span>
                  <% } %>
                  <br />
                  <!-- <span class="fw-bold h5 col">Size:
                    <span class="fw-normal text-muted"><%- element.variants[0].size.value %></span></span> -->
                </div>
              </div>
            </div>
          </div>
          <% }) %>

        <% } else { %>
          
          <div class="col-xl-4 col-6">
            <div class="product">
              <!-- <div class="product-image">
                <div class="ribbon ribbon-info">No products found</div>
              </div> -->
              <div class="py-2">
                <p class="text-muted display-3 text-warning text-sm mb-1">No products found</p>
              </div>
            </div>
          </div>

        <% } %>
        <!-- /product-->
      </div>

    </div>

    <!-- / Grid End-->
    <!-- Sidebar-->
    <div class="sidebar col-xl-3 col-lg-4 order-lg-1">
      <div class="sidebar-block px-3 px-lg-0 me-lg-4">
        <a class="d-lg-none block-toggler" data-bs-toggle="collapse" href="#categoryFilterMenu" aria-expanded="false" aria-controls="categoryFilterMenu">Filter by Categories</a>
        <!-- Category filter menu-->
        <div class="expand-lg collapse" id="categoryFilterMenu">
          <h6 class="sidebar-heading d-none d-lg-block">Categories</h6>

          <div class="mt-4 mt-lg-0" id="categories">
            <% if (typeof categories !== 'undefined' && categories?.length > 0 ) { %>
              <% categories?.forEach((element,i) => { %>
              <div class="mb-1">
                <div class="form-check">
                  <input class="form-check-input" id="category-<%- i %>" type="radio" name="category" value="<%- element._id %>" <%- element._id.toString() === categoryID ? 'checked' : '' %> />
                  <label class="form-check-label text-capitalize" for="category-<%- i %>"><%- element.name %></label>
                </div>
              </div>
              <% }) %>
            <% } %>
          </div>
        </div>
        <div class="sidebar-block px-lg-0 me-lg-4 mb-0 pb-0">
          <button onclick="clearCategory()" type="button" id="clearFilter" class="btn btn-outline-primary">Clear Filter</button>
        </div>
      </div>

      <div class="sidebar-block px-3 px-lg-0 me-lg-4">
        <a class="d-lg-none block-toggler" data-bs-toggle="collapse" href="#sortSelect" aria-expanded="false" aria-controls="priceFilterMenu">Sort by price</a>
        <div class="expand-lg collapse" id="sortSelect">
          <h6 class="sidebar-heading d-none d-lg-block">Price</h6>
          <div class="mt-4 mt-lg-0" id="slider-snap"></div>

          <div class="mb-1">
            <div class="form-check">
              <input class="form-check-input" id="sortPrice" type="radio" name="sortPrice" value="lowPrice" <% if (sortBy==='lowPrice' ) { %> checked <% } %> />
              <label class="form-check-label text-capitalize" for="sortPrice">Price Low to High</label>
            </div>
          </div>

          <div class="mb-1">
            <div class="form-check">
              <input class="form-check-input" id="sortPrice" type="radio" name="sortPrice" value="highPrice" <% if (sortBy==='highPrice' ) { %> checked <% } %> />
              <label class="form-check-label text-capitalize" for="sortPrice">Price High to Low</label>
            </div>
          </div>


        </div>
        <div class="sidebar-block px-lg-0 me-lg-4 mb-0 pb-0">
          <button onclick="clearSort()" type="button" id="clearFilter" class="btn btn-outline-primary">Clear Filter</button>
        </div>
      </div>

      <div class="sidebar-block px-3 px-lg-0 me-lg-4">
        <a class="d-lg-none block-toggler" data-bs-toggle="collapse" href="#brandFilterMenu" aria-expanded="false" aria-controls="brandFilterMenu">Filter by brand</a>
        <!-- Brand filter menu - this menu has .show class, so is expanded by default-->
        <div class="expand-lg collapse" id="brandFilterMenu">
          <h6 class="sidebar-heading d-none d-lg-block">Brands</h6>
          <div class="mt-4 mt-lg-0" id="brands">
            <% brands.forEach((element,i) => { %>
            <div class="mb-1">
              <div class="form-check">
                <input class="form-check-input" id="brand-<%- i %>" type="radio" name="brand" value="<%- element._id %>" <%- element._id.toString() === brandID ? 'checked' : '' %> />
                <label class="form-check-label text-capitalize" for="brand-<%- i %>"><%- element.name %></label>
              </div>
            </div>
            <% }) %>
          </div>
        </div>

        <div class="sidebar-block px-lg-0 me-lg-4 mb-0 pb-0">
          <button onclick="clearBrand()" type="button" id="clearFilter" class="btn btn-outline-primary">Clear Filter</button>
        </div>

        <div class="sidebar-block px-lg-0 me-lg-4">
          <button type="button" id="clearFiltersButton" class="btn btn-outline-primary">Clear All Filters</button>
        </div>  
      </div>

    </div>
    <!-- /Sidebar end-->


  </div>
  <!-- Pagination-->
  <% if (products.length > 0 && nextPage || current == pages) { %>
  <nav aria-label="Product Pagination">
    <ul class="pagination justify-content-center mt-5">
      <% if (current == 1) { %>
      <li class="page-item disabled">
        <a href="#" class="page-link">First</a>
      </li>

      <% } else { %>
      <li class="page-item">
        <a href="?page=1" class="page-link">First</a>
      </li>
      <% } %> <% var i = (Number(current)> 5 ? Number(current) - 4 : 1) %>
      <% if (i !== 1) { %>
      <li class="page-item disabled">
        <a href="#" class="page-link">...</a>
      </li>
      <% } %> <% for( ; i < Number(current) + 4 && i <= pages ; i++ ) { %>
      <% if (i == current) { %>
      <li class="page-item disabled">
        <a href="#" class="page-link"><%= i %> </a>
      </li>
      <% } else { %>
      <li class="page-item">
        <a href="/shop/?page=<%= i %>" class="page-link"><%= i %></a>
      </li>

      <% } %> <% if (i == Number(current)+ 4 && i < pages) { %>
      <li class="page-item disabled">
        <a href="#" class="page-link">...</a>
      </li>
      <% } %> <% } %> <% if (current == pages) { %>
      <li class="page-item disabled">
        <a href="#" class="page-link">Last</a>
      </li>
      <% } else { %>
      <li class="page-item">
        <a href="/shop/?page=<%= pages %>" class="page-link">Last</a>
      </li>

      <% } %>
    </ul>
  </nav>
  <% } %>

</div>

<script defer>
  const searchProduct = document.getElementById('search');
  // Get the search value from the url query

  const urlParams = new URLSearchParams(window.location.search);
  const searchValue = urlParams.get('search');
  console.log(searchValue);
  if (searchValue) {
    searchProduct.value = searchValue;
  }

  console.log(searchProduct.value);

  // Correctly select the checked radio button within the #sortSelect div
  const sortSelect = document.querySelector('#sortSelect .form-check-input:checked');

  console.log(sortSelect, searchProduct.value);

  // Function to handle the change event for categories
  function handleCategoryChange() {
    const categoryId = this.value; // Use 'this' to refer to the radio button that triggered the event
    const brandId = document.querySelector('#brands .form-check-input:checked')?.value;
    const sortValue = sortSelect ? sortSelect.value : ''; // Check if sortSelect is not null
    const searchValue = searchProduct.value;
    const url = `/shop/?category=${categoryId || ''}&brand=${brandId || ''}&sortBy=${sortValue ? sortValue : ''}&search=${searchValue}`;
    window.location.href = url;
  }

  // Attach the event listener to each category radio button
  document.querySelectorAll('#categories .form-check-input').forEach(radioButton => {
    radioButton.addEventListener('change', handleCategoryChange);
  });

  // Function to handle the change event for brands
  function handleBrandChange() {
    const brandId = this.value; // Use 'this' to refer to the radio button that triggered the event
    const categoryId = document.querySelector('#categories .form-check-input:checked')?.value;
    const sortValue = sortSelect ? sortSelect.value : ''; // Check if sortSelect is not null
    const searchValue = searchProduct.value;
    const url = `/shop/?category=${categoryId || ''}&brand=${brandId || ''}&sortBy=${sortValue}&search=${searchValue}`;
    window.location.href = url;
  }

  // Attach the event listener to each brand radio button
  document.querySelectorAll('#brands .form-check-input').forEach(radioButton => {
    radioButton.addEventListener('change', handleBrandChange);
  });

  // Function to handle the change event for sort options
  function handleSortChange() {
    console.log(searchProduct.value);
    const sortValue = this.value; // Use 'this' to refer to the radio button that triggered the event
    const categoryId = document.querySelector('#categories .form-check-input:checked')?.value;
    const brandId = document.querySelector('#brands .form-check-input:checked')?.value;
    const searchValue = searchProduct.value;
    console.log(searchValue);
    const url = `/shop/?category=${categoryId || ''}&brand=${brandId || ''}&sortBy=${sortValue}&search=${searchValue}`;
    window.location.href = url;
  }

  // Attach the event listener to each sort radio button
  document.querySelectorAll('#sortSelect .form-check-input').forEach(radioButton => {
    radioButton.addEventListener('change', handleSortChange);
  });

  const form = document.getElementById('search-bar');

  form.addEventListener('submit', function(event) {
    event.preventDefault();

    console.log(searchProduct);

    const categoryId = document.querySelector('#categories .form-check-input:checked')?.value;
    const brandId = document.querySelector('#brands .form-check-input:checked')?.value;
    const sortValue = sortSelect ? sortSelect.value : ''; // Check if sortSelect is not null
    const searchValue = searchProduct.value;
    console.log(searchValue);
    const url = `/shop/?category=${categoryId || ''}&brand=${brandId || ''}&sortBy=${sortValue}&search=${searchValue}`;
    // searchProduct.value = searchValue; // clear search input
    window.location.href = url;
  });


  const clearCategory = () => {
    document.querySelectorAll('#categories .form-check-input').forEach(radioButton => {
      radioButton.checked = false; // Assuming no default category is selected
    });
    const categoryId = document.querySelector('#categories .form-check-input:checked')?.value;
    const brandId = document.querySelector('#brands .form-check-input:checked')?.value;
    const sortValue = sortSelect ? sortSelect.value : ''; // Check if sortSelect is not null
    const searchValue = searchProduct.value;
    const url = `/shop/?category=${categoryId || ''}&brand=${brandId || ''}&sortBy=${sortValue}&search=${searchValue}`;
    // searchProduct.value = searchValue; // clear search input
    window.location.href = url;
  }

  const clearBrand = () => {
    document.querySelectorAll('#brands .form-check-input').forEach(radioButton => {
      radioButton.checked = false; // Assuming no default brand is selected
    });
    const categoryId = document.querySelector('#categories .form-check-input:checked')?.value;
    const brandId = document.querySelector('#brands .form-check-input:checked')?.value;
    const sortValue = sortSelect ? sortSelect.value : ''; // Check if sortSelect is not null
    const searchValue = searchProduct.value;
    const url = `/shop/?category=${categoryId || ''}&brand=${brandId || ''}&sortBy=${sortValue}&search=${searchValue}`;
    // searchProduct.value = searchValue; // clear search input
    window.location.href = url;
  }

  const clearSort = () => {
    document.querySelectorAll('#sortSelect .form-check-input').forEach(radioButton => {
      radioButton.checked = false; // Assuming no default sort option is selected
    });
    const categoryId = document.querySelector('#categories .form-check-input:checked')?.value;
    const brandId = document.querySelector('#brands .form-check-input:checked')?.value;
    const sortValue = sortSelect ? sortSelect.value : ''; // Check if sortSelect is not null
    const searchValue = searchProduct.value;
    const url = `/shop/?category=${categoryId || ''}&brand=${brandId || ''}&sortBy=${sortValue}&search=${searchValue}`;
    // searchProduct.value = searchValue; // clear search input
    window.location.href = url;
  }

  function clearAllFilters() {
    // Reset categories
    document.querySelectorAll('#categories .form-check-input').forEach(radioButton => {
      radioButton.checked = false; // Assuming no default category is selected
    });

    // Reset brands
    document.querySelectorAll('#brands .form-check-input').forEach(radioButton => {
      radioButton.checked = false; // Assuming no default brand is selected
    });

    // Reset sort options
    document.querySelectorAll('#sortSelect .form-check-input').forEach(radioButton => {
      radioButton.checked = false; // Assuming no default sort option is selected
    });

    // Clear search input
    // searchProduct.value = '';

    // Optionally, reset the sort select to its default value if applicable
    // This step depends on your UI and how the sort select is implemented
    // For example, if you have a default sort option, you can set it here
    // sortSelect.value = 'defaultSortOptionValue';

    // Redirect to the shop page without any filters applied
    if (searchProduct.value === '') {
      window.location.href = `/shop/`;
    } else {
      window.location.href = `/shop?search=${searchProduct.value}`;
    }
  }

  // Attach the clearAllFilters function to a button or any other UI element
  // For example, if you have a button with id 'clearFiltersButton'
  document.getElementById('clearFiltersButton').addEventListener('click', clearAllFilters);


  const addToCart = async (productId, variantId, color, size) => {
    let user = '<%- typeof user %>';

    // Check if user is undefined
    if (user === "undefined") {
      // Use SweetAlert to show a warning and redirect to /login upon confirmation
      Swal.fire({
        icon: 'warning',
        title: 'Oops...',
        text: 'You need to login to add items to Wishlist!',
        confirmButtonText: 'Login',
        showCancelButton: true,
        reverseButtons: true
      }).then((result) => {
        if (result.isConfirmed) {
          // Redirect to /login if the user confirms
          window.location.assign('/login');
        }
      });
    } else {
      console.log(user, productId, variantId, color, size);
      try {
        const response = await fetch(`/user/add-to-cart/`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            productId,
            variantId,
            color,
            size,
          })
        });

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.message || 'Network response was not ok.');
        }

        const data = await response.json();
        let cartCount = document.getElementById("cartCount");
        if (cartCount) {
          cartCount.innerText = data.count;
        }
        Swal.fire({
          icon: "success",
          title: "Added to Cart",
          text: "Your product has been added to the cart.",
          confirmButtonText: "Continue Shopping",
        });
        
      } catch (error) {
        console.log(error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: error.message, // Display the actual error message
        });
      }
    }
  };
</script>
