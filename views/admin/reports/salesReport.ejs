<section class="breadcrumb-option">
  <div class="container">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb breadcrumb-chevron p-3 bg-body-tertiary rounded-2">
        <li class="breadcrumb-item">
          <a class="link-body-emphasis" href="/admin">
            <svg class="bi" width="16" height="16">
              <use xlink:href="#house-door-fill"></use>
            </svg>
            <span class="visually-hidden">Dashboard</span>
          </a>
        </li>

        <li class="breadcrumb-item active" aria-current="page">
          Sales Report
        </li>
      </ol>
    </nav>
  </div>
</section>

<div class="container d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2"><%= locals.title ? locals.title : 'Product Offers' %></h1>

  <div class="d-flex align-items-center gap-2">

    <div class="btn-toolbar mb-2 mb-md-0">
      <form class="d-flex" method="get">
        <div class="d-flex align-items-center gap-2 ">
          <div class="form-group">
            <label for="startDate">From</label>
            <input type="date" name="startDate" id="startDate" class="form-control" placeholder="Start Date" value="<%- startDate %>" />
          </div>
          <div class="form-group">
            <label for="endDate">To</label>
            <input type="date" id="endDate" name="endDate" class="form-control" placeholder="End Date" value="<%- endDate %>" />
          </div>
          <div class="form-group">
            <button type="submit" class="btn btn-primary">
              <i class="bi bi-search"></i>
              Get Report
            </button>
          </div>
        </div>
      </form>
    </div>
    <div class="btn-toolbar">
      <button onclick="getExcel()" type="button" class="btn btn-outline-success"><i class="bi bi-file-earmark-spreadsheet"></i>Excel</button>
      <button id="exportToButton" type="button" class="btn btn-outline-danger"><i class="bi bi-file-earmark-pdf"></i>PDF</button>
    </div>
  </div>
</div>


<main class="main my-5">
  <div class="mx-5">
    <% if(orders && orders.length>0) { %>

    <div class="table-responsive container">
      <table class="table table-striped align-middle display" id="salesReportTable">
        <thead>
          <tr class="text-center">
            <th class="sorting" scope="col">#</th>
            <th class="sorting" scope="col">Order Id</th>
            <th class="sorting" scope="col">Order Date</th>
            <th class="sorting" scope="col">User</th>
            <th class="sorting" scope="col">Products</th>
            <th class="sorting" scope="col">Shipping Address</th>
            <th class="sorting" scope="col">Payment Method</th>
            <th class="sorting" scope="col">Status</th>
            <th class="sorting" scope="col">Total Amount</th>
            <th class="sorting" scope="col">Coupon</th>
            <th class="sorting" scope="col">Coupon Discount</th>
            <th class="sorting" scope="col">Payable</th>
            <th class="sorting" scope="col">Category Discount</th>
          </tr>
        </thead>
        <tbody>
          <% orders.forEach((order, index) => { %>
          <tr class="text-capitalize">
            <td class="text-center"><%=index+1%></td>
            <td class="text-center"><%=order._id%></td>
            <td class="text-center"><%=order.createdAt.toDateString()%></td>
            <td><%=order.userID[0].username%></td>
            <td>
              <ul>
                <% if(orders[index].orderedItems && orders[index].orderedItems.length>0) {%>
                <% for(let j=0 ; j< orders[index].orderedItems.length ; j++ ){%>

                <li class="text-uppercase list-unstyled mt-3 ">
                  <%=orders[index].orderedItems[j].productDetails.product_name%> (
                  <%=orders[index].orderedItems[j].quantity%>
                  )
                </li>
                <% }%>
                <%}%>
            </ul>
            </td>
            <td class="text-center"><%=order.shippingAddress.address%>
            </td>
            <td><%=order.paymentMethod%></td>
            <td><%=order.status%></td>
            <td><%=order.totalAmount%></td>
            <td class="text-uppercase"><%=order.coupon[0]?.code ? order.coupon[0].code : "No Coupon"%></td>
            <td><%=order.couponDiscount%></td>
            <td><%=order.payable.toFixed(2)%></td>
            <td class="text-center"><%=order.categoryDiscount.toFixed(2)%></td>
          </tr>
          <% }) %>
        </tbody>
      </table>
      <%} else{%>
      <div class="container">
        <div class="text-danger h1">No Orders Found</div>
      </div>
    </div>

    <%}%>
    </div>
</main>



<!-- data tables -->
<!-- <link rel="stylesheet" href="https://cdn.datatables.net/2.0.3/css/dataTables.dataTables.css" /> -->
  
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.css" />
<!-- <script src="https://cdn.datatables.net/2.0.3/js/dataTables.js"></script> -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.3/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/2.3.4/purify.min.js"></script>

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script type="text/javascript" src="https://www.shieldui.com/shared/components/latest/js/shieldui-all.min.js"></script>
<script type="text/javascript" src="https://www.shieldui.com/shared/components/latest/js/jszip.min.js"></script>



<script defer>

let table = new DataTable('#salesReportTable', { pageLength: 10, responsive: true });

const startDate = document.getElementById("startDate").value; 
const endDate = document.getElementById("endDate").value; 
const getExcel = () => {
  console.log(startDate, endDate);

  let url = `/admin/sales-report/excel?startDate=${startDate}&endDate=${endDate}`;
  window.location.href = url;
}

const getPDF = async () => {
  const { jsPDF } = window.jspdf;
  const start = document.getElementById("startDate").value;
  const end = document.getElementById("endDate").value;

  try {
    const response = await fetch(`/admin/sales-report/pdf-download?startDate=${start}&endDate=${end}`);
    const html = await response.text();

    const el = document.getElementById('salesReportTable');
    const doc = new jsPDF();
    doc.html(el, {
      callback: doc => doc.save('sales_report.pdf'),
    });
  } catch (error) {
    console.error('Error fetching content or generating PDF:', error);
  }
}

</script>

<script>

//pdf download
document.getElementById("exportToButton").addEventListener("click", function () {
    Swal.fire({
        title: 'Are you sure',
        text: "Are you want to download sales Report",
        icon: 'info',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#D3DBEE',
        confirmButtonText: 'Download'
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire(
                'Downloading..',
                'Your file is being downloadig.',
                'success'
            ).then(async () => {
               
              const dataSource = shield.DataSource.create({
                        data: "#salesReportTable",
                        schema: {
                            type: "table",
                            fields: {
                                User: { type: String },
                                Products: { type: String },
                                Ordered_Date: { type: String },
                                Delivered_Date: { type: String },
                                Quantity: { type: String },
                                Category: { type: String },
                                Payment: { type: String },
                                Amount: { type: Number }
                            }
                        }
                    });

                    dataSource.read().then(function (data) {
                        var pdf = new shield.exp.PDFDocument({
                            author: "TimesCart",
                            created: new Date()
                        });
                        pdf.addPage("a4", "landscape");
                        pdf.table(
                            50,
                            50,
                            data,
                            [
                                { field: "User", title: "User", width: 70 },
                                { field: "Products", title: "Product Name", width: 100 },
                                { field: "Order Date", title: "Ordered Date", width: 100 },
                                { field: "Delivered_Date", title: "Delivered Date", width: 100 },
                                { field: "Quantity", title: "Quantity", width: 70 },
                                { field: "Category", title: "Category", width: 100 },
                                { field: "Payment", title: "Payment", width: 100 },
                                { field: "Amount", title: "Amount", width: 70 },

                            ],
                            {
                                margins: {
                                    top: 50
                                }
                            }
                        );

                        pdf.saveAs({
                            fileName: "SalesReport"
                        });
                      });
            })
        }

    })
});

</script>